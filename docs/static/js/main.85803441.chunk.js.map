{"version":3,"sources":["Zbar/ZbarScanner.jsx","Zbar/ZbarWasmClass.js","misc/img-utils.js","App.js","reportWebVitals.js","index.js","Zbar/Zbar.module.css"],"names":["moduleExports","_video","wasmCls","ZbarWasmClass","props","instance","wasm_func","width","height","this","frame_buffer_ptr","malloc","Uint8Array","BYTES_PER_ELEMENT","result_buffer_ptr","Uint16Array","bytes_memory","memory","buffer","process","bind","data","set","bytes","code_amt","rst","i","offset","type","type_len","info_data_len","String","fromCharCode","push","points","x0","y0","x1","y1","importObj","wasi_snapshot_preview1","fd_seek","fd_close","fd_write","fd_read","environ_sizes_get","environ_get","proc_exit","clock_time_get","env","log_char_arr","msg_ptr","size","ZbarScanner","webcamRef","useRef","canvasRef","useState","codes","setCodes","webcam_cb","useCallback","video","current","canvas","tick","requestAnimationFrame","paused","end","img_data","scale","_width","videoWidth","_height","videoHeight","context","getContext","drawImage","frame_imgdata","getImageData","fetch_imagedata_from_video","_codes","length","ctx","lineWidth","strokeStyle","beginPath","moveTo","lineTo","stroke","addEventListener","fetch","then","response","arrayBuffer","WebAssembly","instantiate","results","exports","useEffect","srcObject","getTracks","forEach","track","stop","free","audio","ref","videoConstraints","facingMode","className","styles","scanner_container","code","map","idx","scanner","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module"],"mappings":"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","file":"static/js/main.85803441.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport styles from \"./Zbar.module.css\";\nimport Webcam from \"react-webcam\";\nimport { fetch_imagedata_from_video } from \"../misc/img-utils\";\nimport ZbarWasmClass from \"./ZbarWasmClass\";\n\nconst importObj = {\n    wasi_snapshot_preview1: {\n        fd_seek: () => { },\n        fd_close: () => { },\n        fd_write: () => { },\n        fd_read: () => { },\n        environ_sizes_get: () => { },\n        environ_get: () => { },\n        proc_exit: () => { },\n        clock_time_get: () => { },\n    },\n    env: {\n        log_char_arr: (msg_ptr, size) => {\n            // console.log(getStringFromMemory(msg_ptr, moduleExports));\n        }\n    }\n};\nconst VIDEO_WIDTH = 400;\nconst VIDEO_HEIGHT = 400;\n\nlet moduleExports;\nlet _video;\nlet wasmCls;\n\nexport const ZbarScanner = (props) => {\n    const webcamRef = useRef(null);\n    const canvasRef = useRef(null);\n\n    const [codes, setCodes] = useState([]);\n\n    const webcam_cb = useCallback(() => {\n        const { video } = webcamRef.current;\n        const canvas = canvasRef.current;\n        \n        _video = video;\n\n        const tick = () => {\n            requestAnimationFrame(tick);\n            if (video.paused || video.end) {\n                return;\n            }\n\n            //#region -------- processing image ----------\n            const img_data = fetch_imagedata_from_video(video, canvas, 1);\n            const _codes = wasmCls.process(img_data.data);\n            if (_codes.length > 0) {\n                // draw code boundary \n                for (let i = 0; i < _codes.length; i++) {\n                    const { points: { x0, y0, x1, y1 } } = _codes[i];\n                    const ctx = canvas.getContext(\"2d\");\n                    ctx.lineWidth = 5;\n                    ctx.strokeStyle = \"#FF0000\";\n                    ctx.beginPath();\n                    ctx.moveTo(x0, y0);\n                    ctx.lineTo(x0, y1);\n                    ctx.lineTo(x1, y1);\n                    ctx.lineTo(x1, y0);\n                    ctx.lineTo(x0, y0);\n                    ctx.stroke();\n                }\n\n                setCodes(_codes);\n            }\n            //#endregion --------- end -------------------\n        };\n\n\n        video.addEventListener('play', () => {\n            fetch('wasm/zbarapp.wasm').then(response =>\n                response.arrayBuffer()\n            ).then(bytes =>\n                WebAssembly.instantiate(bytes, importObj)\n            ).then(results => {\n                // console.log(results);\n                moduleExports = results.instance.exports;\n                wasmCls = new ZbarWasmClass({\n                    instance: moduleExports,\n                    wasm_func: \"func_zbar\",\n                    width: VIDEO_WIDTH,\n                    height: VIDEO_HEIGHT\n                });\n\n                tick();\n            });\n\n\n        }, false);\n\n    }, [webcamRef, canvasRef]);\n\n    useEffect(() => {\n        if (webcam_cb) {\n            webcam_cb();\n        }\n    }, [webcam_cb]);\n\n    useEffect(() => {\n        return () => {\n            if(_video) {\n                const stream = _video.srcObject;\n                const tracks = stream.getTracks();\n                tracks.forEach(track => track.stop());\n                _video.srcObject = null;\n            }\n            if (wasmCls && moduleExports) {\n                moduleExports.free(wasmCls.frame_buffer_ptr);\n                moduleExports.free(wasmCls.result_buffer_ptr);\n            }\n        }\n    }, []);\n\n    return <>\n        <Webcam audio={false}\n            width={1}\n            height={1}\n            ref={webcamRef}\n            videoConstraints={{\n                width: VIDEO_WIDTH,\n                height: VIDEO_HEIGHT,\n                facingMode: \"environment\"\n            }}\n        />\n        <div className={`container ${styles.scanner_container}`} >\n            <div className=\"row justify-content-md-center\">\n                <div className={`col-6 ${styles.code}`}>\n                    {codes && codes.map((code, idx) => {\n                        return <label key={idx}>{`Barcode: ${code.type} - ${code.data} `}</label>\n                    })}\n                </div>\n            </div>\n            <div className=\"row\" >\n                <div className={`col-12 ${styles.scanner}`}>\n                    <canvas ref={canvasRef} />\n                </div>\n            </div>\n        </div>\n    </>\n}","export default class ZbarWasmClass {\n    constructor(props) {\n        const { instance, wasm_func, width, height } = props;\n        this.instance = instance;\n        this.width = width;\n        this.height = height;\n        this.frame_buffer_ptr = instance.malloc(width * height * 4 * Uint8Array.BYTES_PER_ELEMENT);\n        this.result_buffer_ptr = instance.malloc(128 * Uint16Array.BYTES_PER_ELEMENT);\n        this.bytes_memory = new Uint8Array(this.instance.memory.buffer);\n\n        this.wasm_func = instance[wasm_func];\n\n        this.process = this.process.bind(this);\n    }\n\n    process(data) {\n        // console.log(data.length);\n        this.bytes_memory.set(\n            data,\n            this.frame_buffer_ptr,\n            this.frame_buffer_ptr / Uint8Array.BYTES_PER_ELEMENT\n        );        \n\n        this.wasm_func(\n            this.frame_buffer_ptr, \n            this.width, \n            this.height,\n            this.result_buffer_ptr);\n        const bytes = new Uint16Array(this.instance.memory.buffer, this.result_buffer_ptr);        \n        const code_amt = bytes[0];\n        \n        const rst = [];\n        const info_digit = 2;\n        \n        if (code_amt > 0) {\n            // console.log(\"code_amt: \" + code_amt);\n            // console.log(bytes);\n            for (let i = 0, offset = 1; i < code_amt; i++) {\n                let type = \"\", data = \"\";\n                let type_len = bytes[offset];\n                let data_len = bytes[offset + 1];\n\n                let info_data_len = type_len + data_len;\n                // console.log(\"info_data_len: \" + info_data_len);\n\n                for (let i = offset + info_digit; i < offset + info_data_len + info_digit; i++) {\n                    if (i < offset + type_len + info_digit) {\n                        type += String.fromCharCode(bytes[i]);\n                    } else {\n                        data += String.fromCharCode(bytes[i]);\n                    }\n                }\n                \n                offset += info_data_len + info_digit;\n                rst.push({ type: type, data: data, points: \n                    {x0: bytes[offset], y0: bytes[offset + 1], \n                        x1: bytes[offset + 2], y1: bytes[offset + 3]},\n                    });\n                offset += 4;\n            }\n        }\n        return rst;\n\n    }\n}","/**\n * @function\n * @param {HTMLImageElement}: img\n * @return {ImageData}\n*/\nexport const fetch_imgdata_from_image = (img) => {\t\n\tconst {width, height} = img;\n\t// console.log(`${width}-${height}`);\n\tconst canvas = window.document.createElement(\"canvas\");\n\tcanvas.width = width;\n\tcanvas.height = height;\n\tconst ctx = canvas.getContext(\"2d\");\n\tctx.drawImage(img, 0, 0, width, height);\n\treturn ctx.getImageData(0, 0, width, height);\n}\n\n/**\n * @function\n * @param {HTMLVideoElement}: video\n * @param {HTMLCanvasElement}: canvas\n * @param {Number}: scale (0-1)\n*/\nexport const fetch_imagedata_from_video = (video, canvas, scale) => {\n\tconst {videoWidth, videoHeight} = video;\n  // console.log(videoWidth + \", \" + videoHeight);\n\tconst _width = videoWidth * scale, _height = videoHeight * scale;\n\n\tcanvas.width = _width;\n\tcanvas.height = _height;\n\tconst context = canvas.getContext(\"2d\");\n\tcontext.drawImage(video, 0, 0, _width, _height);\n\tconst frame_imgdata = context.getImageData(0, 0, _width, _height);\n\tframe_imgdata['context'] = context;\n\treturn frame_imgdata;\n}\n\nexport function getStringFromMemory(memoryOffset, moduleMemory, size=256) {\n    let returnValue = \"\";    \n    const bytes = new Uint8Array(moduleMemory.buffer, memoryOffset, size);\n\n    let character = \"\";\n    for (let i = 0; i < size; i++) {\n        character = String.fromCharCode(bytes[i]);\n        if (character === \"\\0\") { break; }\n\n        returnValue += character;\n    }\n\n    return returnValue;\n}\n\nexport function convertDataURIToBinary(dataURI) {    \n    var raw = window.atob(dataURI);\n    var rawLength = raw.length;\n    var array = new Uint8Array(new ArrayBuffer(rawLength));\n  \n    for(let i = 0; i < rawLength; i++) {\n      array[i] = raw.charCodeAt(i);\n    }\n    return array;\n  }","import { HashRouter as Router, Route } from \"react-router-dom\";\n// import { MsgPack } from \"./MsgPack\";\n// import { CvCanny } from \"./CvCanny\";\n// import { Zbar } from \"./Zbar\";\n// import {ZbarImage} from \"./Zbar/ZbarImage.jsx\";\nimport { ZbarScanner } from \"./Zbar/ZbarScanner.jsx\";\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        {/* <Route exact path=\"/\" component={MsgPack} />        \n        <Route path=\"/canny\" component={CvCanny} />\n        <Route path=\"/zbar\" component={ZbarImage} /> */}\n        <Route exact path=\"/\" component={ZbarScanner} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scanner_container\":\"Zbar_scanner_container__Fc3zg\",\"scanner\":\"Zbar_scanner__2oDxN\",\"code\":\"Zbar_code__1sDyJ\"};"],"sourceRoot":""}